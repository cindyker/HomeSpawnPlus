<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <prerequisites>
        <maven>3.0</maven>
    </prerequisites>
    
    <name>HomeSpawnPlus</name>
    <groupId>com.andune.minecraft.hsp</groupId>
    <artifactId>HomeSpawnPlus-parent</artifactId>
    <version>2.0.2-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.build.timestamp.format>yyyyMMdd-HHmm</maven.build.timestamp.format>
        <build.number>${maven.build.timestamp}</build.number>
        <build.version>${project.version}-b${build.number}</build.version>
    </properties>

    <ciManagement>
        <system>jenkins</system>
        <url>http://andune.com/jenkins/</url>
    </ciManagement>

    <scm>
        <developerConnection>scm:git:git@github.com:andune/HomeSpawnPlus.git</developerConnection>
        <connection>scm:git:git://github.com/andune/HomeSpawnPlus.git</connection>
        <url>https://github.com/andune/HomeSpawnPlus</url>
        <tag>HEAD</tag>
    </scm>

    <modules>
        <module>api</module>
        <module>bukkit</module>
        <module>core</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>3.0</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject.extensions</groupId>
                <artifactId>guice-assistedinject</artifactId>
                <version>3.0</version>
            </dependency>
            <dependency>
                <groupId>com.andune.minecraft.commonlib</groupId>
                <artifactId>commonlib</artifactId>
                <version>1.0.1-SNAPSHOT</version>
            </dependency>

            <!-- Reflections library -->
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>0.9.9-RC1</version>
            </dependency>

            <!-- Start of Test Dependencies -->
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>6.9.10</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-testng</artifactId>
                <version>1.5.6</version>
                <type>jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito</artifactId>
                <version>1.5.6</version>
                <type>jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>2.0.94-beta</version>
                <scope>test</scope>
            </dependency>
            <!-- End of Test Dependencies -->
        </dependencies>
    </dependencyManagement>

    <build>
        <defaultGoal>clean package</defaultGoal>

        <pluginManagement>
            <plugins>
                <!-- Compile plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.5.1</version>
                    <configuration>
                        <verbose>true</verbose>
                        <fork>true</fork>
                        <source>1.6</source>
                        <target>1.6</target>
                        <compilerVersion>1.6</compilerVersion>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>2.4.3</version>
                </plugin>

                <plugin>
                    <groupId>org.reflections</groupId>
                    <artifactId>reflections-maven</artifactId>
                    <version>0.9.9-RC2</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>

            </plugins>
        </pluginManagement>

        <plugins>

            <!-- Java API version validation. It turns out simply declaring source/target
                 for the maven compile plugin is not enough, you can still end up using 1.7
                 or 1.8 API features accidentally and the project will build fine.
                 animal-sniffer is a plugin to validate that you aren't using features
                 from versions other than what you intend.

                 Run this check with 'mvn animal-sniffer:check'
             -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>animal-sniffer-maven-plugin</artifactId>
                <version>1.11</version>
                <configuration>
                    <signature>
                        <groupId>org.codehaus.mojo.signature</groupId>
                        <artifactId>java16</artifactId>
                        <version>1.1</version>
                    </signature>
                </configuration>
            </plugin>

            <!-- Easy checking to make sure maven dependencies up to date.
                 'mvn versions:display-plugin-updates'
                 'mvn versions:display-dependency-updates'
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.3</version>
            </plugin>

            <!-- License check; run 'mvn license:check' or 'mvn license:format' -->
            <plugin>
                <groupId>com.mycila.maven-license-plugin</groupId>
                <artifactId>maven-license-plugin</artifactId>
                <version>1.9.0</version>
                <configuration>
                    <header>license/header.txt</header>
                    <strictCheck>true</strictCheck>
                    <excludes>
                        <exclude>**/src/main/resources/**</exclude>
                        <exclude>**/src/main/assembly/**</exclude>
                        <exclude>**/src/main/license/**</exclude>
                        <exclude>**/build.number</exclude>
                        <exclude>**/*.md</exclude>
                        <exclude>.idea/**</exclude>
                        <exclude>*.txt</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
